<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RingsideUsersProfile extends Doctrine_Record
{
  public function setTableDefinition()
  {
    $this->setTableName('users_profile');
    $this->hasColumn('id', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => true, 'notnull' => true, 'autoincrement' => true));
    $this->hasColumn('user_id', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => false, 'default' => '', 'notnull' => true, 'autoincrement' => false));
    $this->hasColumn('domain_id', 'string', 32, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(32)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'default' => '', 'notnull' => true, 'autoincrement' => false));
    $this->hasColumn('first_name', 'string', 100, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(100)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('last_name', 'string', 100, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(100)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('dob', 'date', null, array('alltypes' =>  array(  0 => 'date', ), 'ntype' => 'date', 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('sex', 'string', 1, array('alltypes' =>  array(  0 => 'string',   1 => 'boolean', ), 'ntype' => 'varchar(1)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('political', 'string', 100, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(100)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('religion', 'string', 100, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(100)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('last_updated', 'timestamp', null, array('alltypes' =>  array(  0 => 'timestamp', ), 'ntype' => 'timestamp', 'values' =>  array(), 'primary' => false, 'default' => 'CURRENT_TIMESTAMP', 'notnull' => true, 'autoincrement' => false));
    $this->hasColumn('timezone', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(2)', 'unsigned' => 0, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('status_message', 'string', 200, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(200)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('status_update_time', 'timestamp', null, array('alltypes' =>  array(  0 => 'timestamp', ), 'ntype' => 'datetime', 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('pic_url', 'string', 1024, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(1024)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('pic_big_url', 'string', 1024, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(1024)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('pic_small_url', 'string', 1024, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(1024)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('pic_square_url', 'string', 1024, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(1024)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('activities', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('interests', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('music', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('tv', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('movies', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('books', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('quotes', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('about', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('relationship_status', 'string', 200, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(200)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('alternate_name', 'string', 100, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(100)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('significant_other', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('meeting_for', 'string', 200, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(200)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('meeting_sex', 'string', 3, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(3)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
    $this->hasColumn('layout', 'string', null, array('alltypes' =>  array(  0 => 'string',   1 => 'clob', ), 'ntype' => 'text', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => false, 'autoincrement' => false));
  }

  public function setUp()
  {
    parent::setUp();
    
    $this->hasMany('RingsideUsersProContact', array('local' => 'id', 'foreign' => 'profile_id', 'onDelete' => 'CASCADE'));
    $this->hasMany('RingsideUsersProEcontact', array('local' => 'id', 'foreign' => 'profile_id', 'onDelete' => 'CASCADE'));    
    $this->hasMany('RingsideUsersProSchool', array('local' => 'id', 'foreign' => 'profile_id', 'onDelete' => 'CASCADE'));
    $this->hasMany('RingsideUsersProWork', array('local' => 'id', 'foreign' => 'profile_id', 'onDelete' => 'CASCADE'));
  }

}